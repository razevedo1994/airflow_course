CLI Commands


Installing Airflow
docker run -it --rm -p 8080:8080 python:3.10-slim /bin/bash
* Create and start a docker container from the Docker image python:3.8-slim and execute the command /bin/bash in order to have a shell session


python -V
* Print the Python version


export AIRFLOW_HOME=/usr/local/airflow
* Export the environment variable AIRFLOW_HOME used by Airflow to store the dags folder, logs folder and configuration file


env | grep airflow
* To check that the environment variable has been well exported


apt-get update -y && apt-get install -y wget libczmq-dev curl libssl-dev git inetutils-telnet bind9utils freetds-dev libkrb5-dev libsasl2-dev libffi-dev libpq-dev freetds-bin build-essential default-libmysqlclient-dev apt-utils rsync zip unzip gcc && apt-get clean
* Install all tools and dependencies that can be required by Airflow


useradd -ms /bin/bash -d ${AIRFLOW_HOME} airflow
* Create the user airflow, set its home directory to the value of AIRFLOW_HOME and log into it


cat /etc/passwd | grep airflow
* Show the file /etc/passwd to check that the airflow user has been created


pip install --upgrade pip
* Upgrade pip (already installed since we use the Docker image python 3.5)


su - airflow
* Log into airflow


python -m venv .sandbox
* Create the virtual env named sandbox


source .sandbox/bin/activate
* Activate the virtual environment sandbox


wget https://raw.githubusercontent.com/apache/airflow/constraints-2.3.4/constraints-3.10.txt
* Download the requirement file to install the right version of Airflow’s dependencies


pip install "apache-airflow[crypto,celery,postgres,cncf.kubernetes,docker]"==2.3.4 --constraint ./constraints-3.10.txt


* Install the version 2.3.4 of apache-airflow with all subpackages defined between square brackets. (Notice that you can still add subpackages after all, you will use the same command with different subpackages even if Airflow is already installed)


airflow db init
* Initialise the metadatabase


airflow scheduler &
* Start Airflow’s scheduler in background

airflow users create --username admin --firstname rodrigo --lastname azevedo --role Admin --email admin@admin.org
* Creates user

airflow webserver &
* Start Airflow’s webserver in background
